#get the connect command from gcp cluster
cd ~/.kube
code config #(delete the previous if needed and then run the command, after copy the config to the build folder)


echo 'export PATH=$PATH:/home/s_linux/.local/bin' >> ~/.bashrc
source ~/.bashrc
 
 kubectl create namespace vault


 helm install vault hashicorp/vault --namespace vault --version 0.13.0 -f build/vault-override.yaml

 helm upgrade vault hashicorp/vault -f build/vault-override.yaml -n vault

 kubectl get svc -n vault #get the status and addreess of vault


kubectl exec -n vault vault-0 -- vault status


(export PATH="$PATH:/mnt/c/Users/stamz/Downloads/work/Plooto/code/bevel-operator-fabric/istio-1.19.3/bin"
)
export KUBECONFIG=/home/s_linux/.kube/bevel-ws.yaml

export KUBECONFIG=/home/bevel/build/config

export KUBECONFIG=$(pwd)/build/config

export KUBECONFIG=/home/s_linux/work/Plooto/bevel/build/config





#beter from the vault ui kubectl exec -n vault vault-0 -- vault operator unseal g6upwa1b6RGrIyVqWthhZom61qNXXQeiUAp1fUFXl3w=


docker run -it -v $(pwd):/home/bevel/ --network="host" ghcr.io/hyperledger/bevel-build:latest bash

docker run -it -v $(pwd):/home/s_linux/work/Plooto/bevel/ --network="host" ghcr.io/hyperledger/bevel-build:latest bash


docker run -it -v /home/s_linux/gke-gcloud-auth-plugin:/usr/local/bin/gke-gcloud-auth-plugin -v $(pwd):/home/s_linux/work/Plooto/bevel/ --network="host" ghcr.io/hyperledger/bevel-build:latest bash



docker run -it -v /usr/local/bin:/usr/local/bin -v $(pwd):/home/s_linux/work/Plooto/bevel/ --network="host" ghcr.io/hyperledger/bevel-build:latest bash




docker run -it -v /home/s_linux/gke-gcloud-auth-plugin:/usr/local/bin/gke-gcloud-auth-plugin -v /usr/bin/gcloud:/usr/bin/gcloud -v $(pwd):/home/s_linux/work/Plooto/bevel/ --network="host" ghcr.io/hyperledger/bevel-build:latest bash


docker run -it -v /home/s_linux/work/Plooto/google-cloud-sdk:/google-cloud-sdk -v /home/s_linux/gke-gcloud-auth-plugin:/usr/local/bin/gke-gcloud-auth-plugin -v /usr/bin/gcloud:/usr/bin/gcloud -v $(pwd):/home/s_linux/work/Plooto/bevel/ --network="host" ghcr.io/hyperledger/bevel-build:latest bash



docker run -it \
  -v /home/s_linux/work/Plooto/google-cloud-sdk:/google-cloud-sdk \
  -v /home/s_linux/.config/gcloud:/root/.config/gcloud \
  -v /home/s_linux/gke-gcloud-auth-plugin:/usr/local/bin/gke-gcloud-auth-plugin \
  -v $(pwd):/home/s_linux/work/Plooto/bevel/ \
  --network="host" ghcr.io/hyperledger/bevel-build:latest bash


docker run -it \
  -v /home/s_linux/work/Plooto/google-cloud-sdk:/google-cloud-sdk \
  -v /home/s_linux/.config/gcloud:/root/.config/gcloud \
  -v /home/s_linux/.kube:/root/.kube \
  -v /home/s_linux/gke-gcloud-auth-plugin:/usr/local/bin/gke-gcloud-auth-plugin \
  -v /usr/local/bin/kubectl:/usr/bin/kubectl \
  -v $(pwd):/home/s_linux/work/Plooto/bevel/ \
  --network="host" ghcr.io/hyperledger/bevel-build:latest bash







docker run -it \
  -v /usr/local/bin:/usr/local/bin \
  -v /home/s_linux/work/Plooto/google-cloud-sdk:/google-cloud-sdk \
  -v /home/s_linux/.config/gcloud:/root/.config/gcloud \
  -v /home/s_linux/.kube:/root/.kube \
  -v /home/s_linux/gke-gcloud-auth-plugin:/usr/local/bin/gke-gcloud-auth-plugin \
  -v /home/s_linux/.krew/bin:/root/.krew/bin \
  -v $(pwd):/home/s_linux/work/Plooto/bevel/ \
  --network="host" ghcr.io/hyperledger/bevel-build:latest bash

 kubectl hlf --help





docker run -it \
-v /usr/local/bin/kubectl:/usr/bin/kubectl \
-v /home/s_linux/work/Plooto/google-cloud-sdk:/google-cloud-sdk \
-v /home/s_linux/.config/gcloud:/root/.config/gcloud \
-v /home/s_linux/.kube:/root/.kube \
-v /home/s_linux/gke-gcloud-auth-plugin:/usr/local/bin/gke-gcloud-auth-plugin \
-v $(pwd):/home/s_linux/work/Plooto/bevel/ \
-v /home/s_linux/.krew/bin:/root/.krew/bin/ \
--network="host" ghcr.io/hyperledger/bevel-build:latest bash

      

#
export PATH="/google-cloud-sdk/bin:$PATH"
export PATH="/home/s_linux/work/Plooto/google-cloud-sdk/bin:$PATH"
export PATH="/home/s_linux/.krew/bin:$PATH"

git config --global user.email "stamzom@gmail.com"

git config --global user.name "StamZo"

export KUBECONFIG=/home/s_linux/work/Plooto/bevel/build/config
#

cd bevel
ansible-playbook  platforms/shared/configuration/site.yaml -e @./build/network.yaml -vvv


        cd s_linux/work/Plooto/bevel
        ansible-playbook  platforms/shared/configuration/site.yaml -e @./build/network.yaml -vvv
        ansible-playbook  platforms/shared/configuration/site.yaml -e @./build/network-operator-fabric.yaml -vvv


docker run -it -v $(pwd):/home/bevel/ --network="host" ghcr.io/hyperledger/bevel-build:latest

        cd s_linux/work/Plooto/bevel
        ansible-playbook platforms/shared/configuration/site.yaml -e "@./build/network.yaml" -e "reset=true"
        ansible-playbook platforms/shared/configuration/site.yaml -e "@./build/network-operator-fabric.yaml" -e "reset=true"

helm list
helm delete (name)

helm uninstall -n vault vault

kubectl delete pvc -l app.kubernetes.io/name=vault -n vault
kubectl get svc -n default

helm list --all-namespaces
# To delete all of them
#!/bin/bash

# Get a list of all helm releases in all namespaces
releases=$(helm list --all-namespaces -q)

# Loop through each release and delete it
for release in $releases
do
    # Extracting the release name and namespace
    release_name=$(echo $release | awk '{print $1}')
    namespace=$(echo $release | awk '{print $2}')

    # Deleting the release
    echo "Deleting release $release_name in namespace $namespace"
    helm delete $release_name -n $namespace
done

echo "All releases have been deleted."
