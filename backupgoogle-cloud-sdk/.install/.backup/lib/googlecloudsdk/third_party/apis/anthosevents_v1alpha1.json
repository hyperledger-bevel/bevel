{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "anthosevents:v1alpha1",
  "name": "anthosevents",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Cloud Run for Anthos Events",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "",
  "protocol": "rest",
  "rootUrl": "https://anthosevents.googleapis.com/",
  "mtlsRootUrl": "https://anthosevents.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://anthosevents.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "schemas": {
    "CloudRun": {
      "id": "CloudRun",
      "description": "CloudRun is the Schema for the CloudRuns API",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"events.cloud.google.com\/v1beta1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of resource, in this case \"CloudRun\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this CloudRun resource",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "The CloudRunSpec reflects the state of CloudRun\n`json:\"spec,omitempty\"`",
          "$ref": "CloudRunSpec"
        },
        "status": {
          "description": "The CloudRunStatus defines the observed status\n `json:\"status,omitempty\"`",
          "$ref": "CloudRunStatus"
        }
      }
    },
    "ObjectMeta": {
      "id": "ObjectMeta",
      "description": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all\npersisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name must be unique within a namespace, within a Cloud Run region.\nIs required when creating\nresources, although some resources may allow a client to request the\ngeneration of an appropriate name automatically. Name is primarily intended\nfor creation idempotence and configuration definition. Cannot be updated.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#names\n+optional",
          "type": "string"
        },
        "generateName": {
          "description": "(Optional)\n\nCloud Run fully managed: not supported\n\nCloud Run for Anthos: supported\n\nGenerateName is an optional prefix, used by the server, to generate a\nunique name ONLY IF the Name field has not been provided. If this field is\nused, the name returned to the client will be different than the name\npassed. This value will also be combined with a unique suffix. The provided\nvalue has the same validation rules as the Name field, and may be truncated\nby the length of the suffix required to make the value unique on the\nserver.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with\nReason ServerTimeout indicating a unique name could not be found in the\ntime allotted, and the client should retry (optionally after the time\nindicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info:\nhttps:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#idempotency\n string generateName = 2;",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique, within a\nCloud Run region. In Cloud Run the namespace must be equal to either the\nproject ID or project number.",
          "type": "string"
        },
        "selfLink": {
          "description": "(Optional)\n\nSelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n string selfLink = 4;",
          "type": "string"
        },
        "uid": {
          "description": "(Optional)\n\nUID is the unique in time and space value for this object. It is typically\ngenerated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\n\nPopulated by the system.\nRead-only.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#uids",
          "type": "string"
        },
        "resourceVersion": {
          "description": "(Optional)\n\nAn opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. Clients must treat these values as opaque and\npassed unmodified back to the server. They may only be valid for a\nparticular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info:\nhttps:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "generation": {
          "description": "(Optional)\n\nA sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.",
          "type": "integer",
          "format": "int32"
        },
        "creationTimestamp": {
          "description": "(Optional)\n\nCreationTimestamp is a timestamp representing the server time when this\nobject was created. It is not guaranteed to be set in happens-before order\nacross separate operations. Clients may not set this value. It is\nrepresented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info:\nhttps:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "(Optional)\n\nMap of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand routes.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "(Optional)\n\nAnnotations is an unstructured key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. They\nare not queryable and should be preserved when modifying objects. More\ninfo: http:\/\/kubernetes.io\/docs\/user-guide\/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ownerReferences": {
          "description": "(Optional)\n\nCloud Run fully managed: not supported\n\nCloud Run for Anthos: supported\n\nList of objects that own this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected.",
          "type": "array",
          "items": {
            "$ref": "OwnerReference"
          }
        },
        "deletionTimestamp": {
          "description": "(Optional)\n\nCloud Run fully managed: not supported\n\nCloud Run for Anthos: supported\n\nDeletionTimestamp is RFC 3339 date and time at which this resource will be\ndeleted. This field is set by the server when a graceful deletion is\nrequested by the user, and is not directly settable by a client. The\nresource is expected to be deleted (no longer visible from resource lists,\nand not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items,\ndeletion is blocked. Once the deletionTimestamp is set, this value may not\nbe unset or be set further into the future, although it may be shortened or\nthe resource may be deleted prior to this time. For example, a user may\nrequest that a pod is deleted in 30 seconds. The Kubelet will react by\nsending a graceful termination signal to the containers in the pod. After\nthat 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\nto the container and after cleanup, remove the pod from the API. In the\npresence of network partitions, this object may still exist after this\ntimestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info:\nhttps:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata",
          "type": "string",
          "format": "google-datetime"
        },
        "deletionGracePeriodSeconds": {
          "description": "(Optional)\n\nCloud Run fully managed: not supported\n\nCloud Run for Anthos: supported\n\nNumber of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also\nset. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int32"
        },
        "finalizers": {
          "description": "(Optional)\n\nCloud Run fully managed: not supported\n\nCloud Run for Anthos: supported\n\nMust be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterName": {
          "description": "(Optional)\n\nCloud Run fully managed: not supported\n\nCloud Run for Anthos: supported\n\nThe name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in\ndifferent clusters. This field is not set anywhere right now and apiserver\nis going to ignore it if set in create or update request.",
          "type": "string"
        }
      }
    },
    "OwnerReference": {
      "id": "OwnerReference",
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. Currently, an owning object must be in the same namespace, so there\nis no namespace field.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info:\nhttps:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#names",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#uids",
          "type": "string"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.\n+optional",
          "type": "boolean"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
          "type": "boolean"
        }
      }
    },
    "CloudRunSpec": {
      "id": "CloudRunSpec",
      "description": "CloudRunSpec defines the desired state of CloudRun",
      "type": "object",
      "properties": {
        "eventing": {
          "description": "`json:\"eventing,omitempty\"`",
          "$ref": "EventingSpec"
        },
        "serving": {
          "description": "`json:\"serving,omitempty\"`",
          "$ref": "ServingSpec"
        },
        "networking": {
          "description": "`json:\"networking,omitempty\"`",
          "$ref": "NetworkingSpec"
        }
      }
    },
    "EventingSpec": {
      "id": "EventingSpec",
      "description": "EventingSpec defines the desired state of Eventing",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "ServingSpec": {
      "id": "ServingSpec",
      "description": "ServingSpec defines the desired state of Serving",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "NetworkingSpec": {
      "id": "NetworkingSpec",
      "description": "NetworkingSpec defines the desired state of Networking",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "loadbalancertype": {
          "description": "LoadBalancerType is whether the istio ingress is internal or external\npossible values are internal | external(implicit).",
          "type": "string"
        }
      }
    },
    "CloudRunStatus": {
      "id": "CloudRunStatus",
      "description": "CloudRunStatus defines the observed state of CloudRun",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Service that\nwas last processed by the controller.",
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "description": "Conditions are the latest available observations of a resource's current\nstate.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "annotations": {
          "description": "Annotations is additional Status fields for the Resource to save some\nadditional State as well as convey more information to the user. This is\nroughly akin to Annotations on any k8s resource, just the reconciler\nconveying richer information outwards.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "eventingversion": {
          "description": "The version of the installed release.",
          "type": "string"
        },
        "servingversion": {
          "description": "The version of the installed release.",
          "type": "string"
        },
        "istioversion": {
          "description": "The version of the installed release.",
          "type": "string"
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "Condition defines a generic condition for a Resource",
      "type": "object",
      "properties": {
        "type": {
          "description": "type is used to communicate the status of the reconciliation process.\nSee also:\nhttps:\/\/github.com\/knative\/serving\/blob\/master\/docs\/spec\/errors.md#error-conditions-and-reporting\nTypes common to all resources include:\n* \"Ready\": True when the Resource is ready.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "reason": {
          "description": "Optional. One-word CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "message": {
          "description": "Optional. Human readable message indicating details about the current status.",
          "type": "string"
        },
        "lastTransitionTime": {
          "description": "Optional. Last time the condition transitioned from one status to another.",
          "type": "string",
          "format": "google-datetime"
        },
        "severity": {
          "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info",
          "type": "string"
        }
      }
    },
    "ListCloudRunsResponse": {
      "id": "ListCloudRunsResponse",
      "description": "ListCloudRunsResponse is a list of CloudRun resources.\nThe next page token is specified as the \"continue\" field in ListMeta.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"core\/v1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"CloudRunList\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this CloudRun list.",
          "$ref": "ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "CloudRun"
          }
        }
      }
    },
    "ListMeta": {
      "id": "ListMeta",
      "description": "ListMeta describes metadata that synthetic resources must have, including\nlists and various status objects. A resource may have only one of\n{ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed. Value must\nbe treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info:\nhttps:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string"
        },
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items\nreturned, and indicates that the server has more data available. The value\nis opaque and may be used to issue another request to the endpoint that\nserved this list to retrieve the next set of available objects. Continuing\na list may not be possible if the server configuration has changed or more\nthan a few minutes have passed. The resourceVersion field returned when\nusing this continue value will be identical to the value in the first\nresponse.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "namespaces": {
      "resources": {
        "cloudruns": {
          "methods": {
            "create": {
              "id": "anthosevents.namespaces.cloudruns.create",
              "path": "apis/addons.sigs.k8s.io/v1alpha1/{+parent}/cloudruns",
              "flatPath": "apis/addons.sigs.k8s.io/v1alpha1/namespaces/{namespacesId}/cloudruns",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The namespace in which this CloudRun resource should\nbe created.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "CloudRun"
              },
              "response": {
                "$ref": "CloudRun"
              },
              "description": "Creates a new CloudRun resource."
            },
            "list": {
              "id": "anthosevents.namespaces.cloudruns.list",
              "path": "apis/addons.sigs.k8s.io/v1alpha1/{+parent}/cloudruns",
              "flatPath": "apis/addons.sigs.k8s.io/v1alpha1/namespaces/{namespacesId}/cloudruns",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The namespace from which the CloudRun resources should be listed.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+$",
                  "type": "string"
                },
                "limit": {
                  "description": "The maximum number of records that should be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name.\nSend this in a query string format. i.e. 'metadata.name%3Dlorem'.",
                  "location": "query",
                  "type": "string"
                },
                "labelSelector": {
                  "description": "Allows to filter resources based on a label. Supported operations are\n=, !=, exists, in, and notIn.",
                  "location": "query",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should\nstart.",
                  "location": "query",
                  "type": "string"
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well.",
                  "location": "query",
                  "type": "boolean"
                },
                "continue": {
                  "description": "Optional encoded string to continue paging.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListCloudRunsResponse"
              },
              "description": "Rpc to list CloudRun resources."
            },
            "get": {
              "id": "anthosevents.namespaces.cloudruns.get",
              "path": "apis/addons.sigs.k8s.io/v1alpha1/{+name}",
              "flatPath": "apis/addons.sigs.k8s.io/v1alpha1/namespaces/{namespacesId}/cloudruns/{cloudrunsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the CloudRun resource being retrieved.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+\/cloudruns\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "CloudRun"
              },
              "description": "Rpc to get information about a CloudRun resource."
            },
            "patch": {
              "id": "anthosevents.namespaces.cloudruns.patch",
              "path": "apis/addons.sigs.k8s.io/v1alpha1/{+name}",
              "flatPath": "apis/addons.sigs.k8s.io/v1alpha1/namespaces/{namespacesId}/cloudruns/{cloudrunsId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "The name of the CloudRun resource being updated.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+\/cloudruns\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "CloudRun"
              },
              "response": {
                "$ref": "CloudRun"
              },
              "description": "Rpc to update a CloudRun resource."
            },
            "replaceCloudRun": {
              "id": "anthosevents.namespaces.cloudruns.replaceCloudRun",
              "path": "apis/addons.sigs.k8s.io/v1alpha1/{+name}",
              "flatPath": "apis/addons.sigs.k8s.io/v1alpha1/namespaces/{namespacesId}/cloudruns/{cloudrunsId}",
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "description": "The name of the CloudRun resource being replaced.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+\/cloudruns\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "CloudRun"
              },
              "response": {
                "$ref": "CloudRun"
              },
              "description": "Rpc to replace a CloudRun resource.\n\nOnly the spec and metadata labels and annotations are modifiable. After\nthe Update request, Cloud Run will work to make the 'status'\nmatch the requested 'spec'.\n\nMay provide metadata.resourceVersion to enforce update from last read for\noptimistic concurrency control."
            },
            "delete": {
              "id": "anthosevents.namespaces.cloudruns.delete",
              "path": "apis/addons.sigs.k8s.io/v1alpha1/{+name}",
              "flatPath": "apis/addons.sigs.k8s.io/v1alpha1/namespaces/{namespacesId}/cloudruns/{cloudrunsId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The name of the CloudRun resource being deleted.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+\/cloudruns\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "description": "Rpc to delete a CloudRun."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}