---
deployment:
  annotations: 
nodeName: notary
replicas: 1
metadata:
  namespace: supplychainkd-ns
  labels:
dockerImagePki:
  name: corda/enterprise-pkitool
  tag: 1.2-zulu-openjdk8u242
  pullPolicy: Always
storage:
  name: awsstorageclass
replicas: 1
image:
  initContainerName: adopblockchaincloud0502.azurecr.io/alpine-utils:1.0
  imagePullSecret: regcred

dockerImageSigner:
  name: corda/enterprise-signer
  tag: 1.2-zulu-openjdk8u242
  pullPolicy: Always

# required parameter
acceptLicense: YES


service:
  type: ClusterIP
  port: 20003

volume:
  baseDir: /opt/corda

vault:
  address: http://vault.internal.dev.aws.blockchaincloudpoc-develop.com:8200
  role: vault-role
  authpath: cordanotarykd
  serviceaccountname: vault-auth
  tokensecretprefix: notarykd/credentials/vaultroottoken
  certsecretprefix: notarykd/certs

healthcheck:
  #Provide the interval in seconds you want to iterate till db to be ready
  #Eg. readinesscheckinterval: 5
  readinesscheckinterval: 10
  #Provide the threshold till you want to check if specified db up and running
  #Eg. readinessthreshold: 2
  readinessthreshold: 15

serviceSsh:
  type: ClusterIP
  port: 2222
  targetPort: 2222
  nodePort:

shell:
  user: signer
  password: signerP

# required parameter
idmanPublicIP: 52.210.203.127

idmanPort: 10000

serviceLocations:
  identityManager:
    host: idman-internal
    port: 5052
  networkMap:
    host: nmap-internal
    port: 5050
  revocation:
    port: 5053

signers:
  CSR:
    schedule:
      interval: 1m
  CRL:
    schedule:
      interval: 1d
  NetworkMap:
    schedule:
      interval: 1m
  NetworkParameters:
    schedule:
      interval: 1m

cordaJarMx: 1

healthCheckNodePort: 0

# where is CENM service jar file stored
jarPath: bin

# where is CENM service configuration file stored
configPath: etc
