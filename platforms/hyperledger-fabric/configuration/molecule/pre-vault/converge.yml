---
- name: Converge
  hosts: localhost
  connection: local
  vars:
    network:
      env:
        proxy: haproxy
    kubernetes: 
      config_file: "/tmp/molecule/kind-default/kubeconfig"
      context: "kind"
    vault:
      url: http://0.0.0.0:9090/
      root_token: root

  pre_tasks:
    - name: Create temp roles dir folder
      file:
        path: "{{ playbook_dir }}/../../shared/configuration"
        state: directory
        
    - name: Copy the roles
      copy:
        src: "{{ playbook_dir }}/../../../../shared/configuration/roles"
        dest: "{{ playbook_dir }}/../../shared/configuration"

    - name: Delete any existing vault secret path
      shell: |
        vault secrets disable secret/
      environment:
        VAULT_ADDR: "{{ vault.url }}"
        VAULT_TOKEN: "{{ vault.root_token }}"

    - name: create/enable new vault secret path
      shell: |
        vault secrets enable -version=1 -path=secret kv
      environment:
        VAULT_ADDR: "{{ vault.url }}"
        VAULT_TOKEN: "{{ vault.root_token }}"

    - name: ca-server/ Write the ca server admin credentials to Vault
      shell: |
        vault write secret/credentials/testorderer/ca/testorderer user="testorderer-adminpw"
      environment:
        VAULT_ADDR: "{{ vault.url }}"
        VAULT_TOKEN: "{{ vault.root_token }}"

    - name: crypto/orderer/ Copy the crypto material for orderer
      shell: |
        vault write secret/crypto/ordererOrganizations/testorderer/orderers/testorderer1.testorderer/tls ca.crt="TEST CA CERTS"
        vault write secret/crypto/ordererOrganizations/testorderer/orderers/testorderer1.testorderer/msp admincerts="Test Admin Certs" cacerts="Test CA Certs" keystore="Test Keystore"
      environment:
        VAULT_ADDR: "{{ vault.url }}"
        VAULT_TOKEN: "{{ vault.root_token }}"

    - name: crypto/orderer/ Copy the crypto material to Vault
      shell: |
        vault write secret/crypto/ordererOrganizations/testorderer/ambassador/testOrderer1 certificate="Test Certificate" key="Test Key"
      environment:
        VAULT_ADDR: "{{ vault.url }}"
        VAULT_TOKEN: "{{ vault.root_token }}"

    - name: crypto/peer/ Copy organization level certificates for orgs
      shell: |
        vault write secret/crypto/peerOrganizations/testpeer/users/admin/tls ca.crt="Test CA Cert" client.crt="Test Client cert" client.key="Test Client key"
        vault write secret/crypto/peerOrganizations/testpeer/users/admin/msp admincerts="Test Admin Certs" cacerts="Test CA certs" keystore="Test keystore"
      environment:
        VAULT_ADDR: "{{ vault.url }}"
        VAULT_TOKEN: "{{ vault.root_token }}"

    - name: crypto/peer/ Copy organization level certificates for orgs
      shell: |
        vault write secret/crypto/peerOrganizations/testpeer/users/user1/tls ca.crt="Test CA cert" client.crt="Test Client Cert" client.key="Test Client Key"
        vault write secret/crypto/peerOrganizations/testpeer/users/user1/msp admincerts="Test Admin CA Certs" cacerts="Test CA Certs" keystore="Test KEystore" signcerts="Test Sign Certs" tlscacerts="Test TLSCA Certs"
      environment:
        VAULT_ADDR: "{{ vault.url }}"
        VAULT_TOKEN: "{{ vault.root_token }}"

    - name: crypto/peer/ Copy the crypto material for peer
      shell: |
        vault write secret/crypto/peerOrganizations/testpeer/peers/testpeer1.testpeer/tls ca.crt="Test CA Certs" server.crt="Test Server Cert" server.key="Test Server Key"
        vault write secret/crypto/peerOrganizations/testpeer/peers/testpeer1.testpeer/msp admincerts="Test Admin Certs" cacerts="Test CA Certs" keystore="Test Keystore" signcerts="Test Sign Certs" tlscacerts="Test TLS CACerts"
      environment:
        VAULT_ADDR: "{{ vault.url }}"
        VAULT_TOKEN: "{{ vault.root_token }}"
  tasks:
#####################################################################################
    # Copying openssl.conf to molecule playbook directory
    - name: "Copy openssl.conf to molecule directory"
      copy:
        src: "{{ playbook_dir }}/../../openssl.conf"
        dest: "{{ playbook_dir }}"

####################################################################################
    # Testing CA server role for orderer
    - name: "Include create/ca-server"
      include_role:
        name: "configuration/roles/create/ca-server"
      vars:    
        network:
          version: 1.4.4
          env:
            proxy: testproxy
        component_type: orderer
        values_dir: test
        component_name: testorderer
        component: testorderer
        ca:
          name: test_ca
          subject: "/C=GB/ST=London/L=London/O=Orderer/CN=ca.sj-net"
        docker_url: test_docker_url
        gitops:
          git_ssh: test_git_ssh
          branch: test_branch
          chart_source: test_chart_source
        vault_ca_result:
          failed: True
        component_services:
          ca:
            name: ca
            grpc:
              port: 7054
        vault:
          url: http://0.0.0.0:9090/
          root_token: root
        
####################################################################################
    # Testing CA server role for peer
    - name: "Include create/ca-server"
      include_role:
        name: "configuration/roles/create/ca-server"
      vars:    
        network:
          version: 1.4.4
          env:
            proxy: testproxy
        component_type: peer
        values_dir: test
        component_name: testpeer
        component: testpeer
        ca:
          name: test_ca
          subject: "/C=GB/ST=London/L=London/O=Peer/CN=ca.sj-net"
        docker_url: test_docker_url
        gitops:
          git_ssh: test_git_ssh
          branch: test_branch
          chart_source: test_chart_source
        vault_ca_result:
          failed: True
        component_services:
          ca:
            name: ca
            grpc:
              port: 7054
        vault:
          url: http://0.0.0.0:9090
          root_token: root

#####################################################################################
    # Testing create/crypto_script role for orderer
    - name: "Include configuration/roles/create/crypto_script"
      include_role:
        name: "configuration/roles/create/crypto_script"
      vars:
        component_type: orderer
        component_name: test_component_name
        item:
          name: test_name
          country: test_country
          subject: test_subject
          state: test_state
          location: test_location
          external_url_suffix: test_url
          ca_data:
            url: test_ca_data_url
        orderers:
          - orderer:
            name: test_orderer
            type: orderer
            consensus: kafka
            grpc:
              port: 7050
        vault:
          url: http://0.0.0.0:9090
          root_token: root

#####################################################################################
    # Testing create/crypto_script for peers
    - name: "Include configuration/roles/create/crypto_script"
      include_role:
        name: "configuration/roles/create/crypto_script"
      vars:
        component_type: peer
        component_name: test_component_name
        item:
          name: test_name
          country: test_country
          subject: test_subject
          state: test_state
          location: test_location
          external_url_suffix: test_url
          ca_data:
            url: test_ca_data_url
          services:
            peers:
            - peer:
            - peer:
        vault:
          url: http://0.0.0.0:9090
          root_token: root

#####################################################################################
    # Testing create/crypto/orderer
    - name: "Include create/crypto/orderer"
      include_role:
        name: "orderer"
      vars:
        component_type: orderer
        component_name: testorderer
        vault_tls_result:
          failed: False
        vault_orderer_ambassador:
          failed: True
        cert_subject: "O=Mj/OU=Mj/L=47.38;8.54;Zurich/C=CH"
        item:
          external_url_suffix: "test.url.com"
        services:
          orderers:
          - orderer:
            name: testorderer1
          - orderer: 
            name: testorderer2
        vault:
          url: http://0.0.0.0:9090
          root_token: root


#####################################################################################
    # Testing create/crypto/peer
    - name: "Include create/crypto/peer"
      include_role:
        name: "peer"
      vars:
        component_type: peer
        component_name: testpeer
        item:
          external_url_suffix: "test.url.com"
        vault_peer_ambassador:
          failed: True
        peer:
          name: testpeer
        cert_subject: "O=Mj/OU=Mj/L=47.38;8.54;Zurich/C=CH"
        services:
          peers:
          - peer:
            name: testpeer0
          - peer:
            name: testpeer1
        vault:
          url: http://0.0.0.0:9090
          root_token: root
