apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.metadata.namespace }}
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: {{ .Values.service.name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }} 
    {{- include "labels.custom" . | nindent 2 }}
  name: {{ .Values.service.name }}

spec:
  # serviceName: {{ .Values.service.name }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: consortiumchain
      name: {{ .Values.service.name }}
      service.rpc: {{ .Values.service.name }}
      app.kubernetes.io/name: {{ .Values.service.name }}
      helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      app.kubernetes.io/instance: {{ .Release.Name }} 
      {{- include "labels.custom" . | nindent 2 }}
  # updateStrategy:
  #   type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: consortiumchain
        name: {{ .Values.service.name }}
        service.rpc: {{ .Values.service.name }}
        app.kubernetes.io/name: {{ .Values.service.name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }} 
        {{- include "labels.custom" . | nindent 2 }}

    spec:

      containers:
        - name: {{ .Values.container.name }}
          image: {{ .Values.image.repository | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy}}
          ports:
            - name: http
              containerPort: {{.Values.service.targetPort}}
              protocol: TCP
              
          env:
            - name: AUTHORIZATION_PROTOCOL
              value: {{  .Values.envs.authorizationProtocol | quote  }}
            - name: AUTHORIZATION_CONFIG_JSON
              value: {{  .Values.envs.authorizationConfigJson | quote  }}
            - name: GRPC_TLS_ENABLED
              value: {{  .Values.envs.grpcTlsEnabled | quote  }}
          envFrom:
          - configMapRef:
              name: plugins-{{ .Values.service.name }}
      #     volumeMounts:
      #       - name: {{ .Values.service.name }}-plugins-volume
      #         mountPath: /etc/plugin/
      #     command: [ "/bin/sh", "-c", "ls /etc/config/" ]
      # volumes:
      #   - name: {{ .Values.service.name }}-plugins-volume
      #     configMap:
      #       name: plugins-{{ .Values.service.name }}
      # restartPolicy: Always
