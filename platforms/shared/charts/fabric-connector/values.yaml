
metadata:
  namespace: 

replicaCount: 1

image:
  repository: chary123/cplcb:latest
  pullPolicy: Always

service:
  type: LoadBalancer
  name: test-fabric
  port: 3000
  targetPort: 3000
  nodePort: 30001

container:
  name: test-hfc

plugins: 
  confdir: /etc/plugin
  packageName: "@hyperledger/cactus-plugin-ledger-connector-fabric"
  type: org.hyperledger.cactus.plugin_import_type.LOCAL
  action: org.hyperledger.cactus.plugin_import_action.INSTALL
  instanceId: '12345678'
  dockerBinary: 'usr/local/bin/docker'
  corePeerLocalMSPID: Org1MSP
  corePeerAddress: peer0.org1.example.com:7051
  corePeerMSPconfigpath: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp"
  corePeerTlsRootcertFile: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt"
  ordererTlsRootcertFile: "/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"
  enabled: "true"
  asLocalhost: "true"

envs:
  authorizationProtocol: 'NONE'
  authorizationConfigJson: '{}'
  grpcTlsEnabled: 'false'

proxy:
  provider: "ambassador"
  external_url:
  rpcport: 15080
healthcheck:
  readinessthreshold:
  readinesscheckinterval:

# This section contains the storage information.
storage:
  storageclassname: 
  storagesize: 

vault:
  serviceAccountName: 
  address: 
  secretPrefix: 
  keyname: 
  tmdir: 
  tlsdir: 
  authpath: 
  role: 

connection:
  # Provide the name of the peer from which MSP will be copied
  # Eg. peer: peer0.manufacturer-net 
  peer:
  # Provide the peer external or intenal address
  # Eg. peerAddress: peer0.manufacturer-net.blockchaincloudpoc.com 
  peerAddress:
  # Provide the peer external or intenal port
  # Eg. peer: 8443 
  peerPort:
  # Provide the orderer external or intenal address
  # Eg. peerAddress: orderer.supplychain-net.blockchaincloudpoc.com 
  ordererAddress:
  # Provide the orderer external or intenal port
  # Eg. peer: 8443 
  ordererPort:

