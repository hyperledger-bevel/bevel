##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
#######################################
# Playbook to setup the environment for running Hyperledger Bevel configurations
#  - checks and installs kubectl, helm and vault clients
#  - If cloud platform is AWS, checks and installs aws-cli and aws-authenticator
#######################################
  - hosts: ansible_provisioners
    gather_facts: yes
    no_log: "{{ no_ansible_log | default(false) }}"
    tasks:
    # - include_role:
    #     name: setup/besu-connector
    #   vars:
    #     build_path: "./build"
    #     kubernetes: "{{ item.k8s }}"
    #     consensus: "{{ network.config.consensus }}"
    #     component_ns: "{{ item.name | lower }}-bes"
    #     name: "{{ item.name | lower }}"
    #     peers: "{{ item.services.peers }}"
    #     storageclass_name: "{{ item.cloud_provider }}storageclass"
    #     external_url: "{{ item.external_url_suffix }}"
    #     vault: "{{ item.vault }}"
    #     git_url: "{{ item.gitops.git_url }}"
    #     git_branch: "{{ item.gitops.branch }}"
    #     docker_url: "{{ network.docker.url }}"
    #     charts_dir: "/home/bevel/platforms/shared/charts/besu-connector"
    #     # charts_dir: "{{ item.gitops.chart_source }}"
    #     values_dir: "/home/bevel/platforms/shared/charts/besu-connector"
    #     # "{{playbook_dir}}/../../../{{item.gitops.release_dir}}"
    #     # loop: "{{ network['organizations'] }}"      
    #     aws_authenticator:
    #       os: "{{ install_os }}"
    #       arch: "{{ install_arch }}"
    #       bin_directory: "{{ bin_install_dir }}"
    #     kubeconfig_path: "{{ item.k8s.config_file }}"
    #     kubecontext: "{{ item.k8s.context }}"
    #   with_items: "{{ network.organizations }}"
    #   # when: "network.node_connector == 'present'"
    
     
    - include_role:
        name: setup/fabric-connector
      vars:
        build_path: "./build"
        kubernetes: "{{ item.k8s }}"
        consensus: "{{ network.config.consensus }}"
        component_ns: "{{ item.name | lower }}-bes"
        name: "{{ item.name | lower }}"
        peers: "{{ item.services.peers }}"
        storageclass_name: "{{ item.cloud_provider }}storageclass"
        external_url: "{{ item.external_url_suffix }}"
        vault: "{{ item.vault }}"
        git_url: "{{ item.gitops.git_url }}"
        git_branch: "{{ item.gitops.branch }}"
        docker_url: "{{ network.docker.url }}"
        charts_dir: "/home/bevel/platforms/shared/charts/fabric-connector"
        # charts_dir: "{{ item.gitops.chart_source }}"
        values_dir: "/home/bevel/platforms/shared/charts/fabric-connector"
        # "{{playbook_dir}}/../../../{{item.gitops.release_dir}}"
        # loop: "{{ network['organizations'] }}"      
        aws_authenticator:
          os: "{{ install_os }}"
          arch: "{{ install_arch }}"
          bin_directory: "{{ bin_install_dir }}"
        kubeconfig_path: "{{ item.k8s.config_file }}"
        kubecontext: "{{ item.k8s.context }}"
      with_items: "{{ network.organizations }}"
      # when: "{{network.node_connector}} == true "
    
     

    vars: #These variables can be overriden from the command line
      privilege_escalate: false           #Default to NOT escalate to root privledges
      install_os: "linux"                 #Default to linux OS
      install_arch:  "amd64"              #Default to amd64 architecture
      bin_install_dir:  "~/bin"           #Default to ~/bin install directory for binaries
