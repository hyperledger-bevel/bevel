---
# We have enabled additional ports on Ambassador for TCP. By default 8443 is exposed.
# The extra ports are pass as parameter --set ambassador.otherPorts={10010,10020} is taken from network.env.ambassadorPorts
- name: Format ambassador ports
  shell: |
    json=$(echo "{{ stewards }}" | tr -d ' ' | sed "s/'/\"/g" | sed "s/u\"/\"/g" | sed "s/None/\"None\"/g" | sed "s/True/\"True\"/g" | sed "s/False/\"False\"/g")
    length=$(echo "${json}" | jq '.[] | length')
    index=0
    ports=""
    while [[ ${index} < ${length} ]]
    do
      steward=$( echo ${json} | jq ".[${index}]")
      name=$(echo ${steward} | jq '.name' | tr -d '"')
      node_port=$(echo ${steward} | jq '.node.ambassador' | tr -d '"')
      client_port=$(echo ${steward} | jq '.client.ambassador' | tr -d '"')
      if [[ ${name} != null ]]
      then
        if [[ ${ports} != "" ]]
        then
          ports+=,
        fi
        ports+=${node_port},${client_port}
      fi
      index=$(( ${index} + 1 ))
    done
    echo ${ports}
  register: terminal
  when: network['type'] == 'indy'

- name: Install Ambassador
  vars:
    eip: "eip"
  shell: |
    {% if network.type == 'indy' %}
    KUBECONFIG={{ kubeconfig_path }} helm upgrade --install --namespace default --set ambassador.otherPorts={"{{ terminal.stdout }}"} --set ambassador.eip={{ eip }} --set ambassador.targetPort={{ ambassador.targetPort }} --set ambassador.port={{ ambassador.port }} --set ambassador.tag={{ ambassador.tag }} --set ambassador.image={{ ambassador.image }} ambassador {{ playbook_dir }}/../../../platforms/shared/charts/ambassador
    {% else %}
    KUBECONFIG={{ kubeconfig_path }} helm upgrade --install --namespace default --set ambassador.otherPorts={"{{ network.env.ambassadorPorts }}"} --set ambassador.targetPort={{ ambassador.targetPort }} --set ambassador.port={{ ambassador.port }} --set ambassador.tag={{ ambassador.tag }} --set ambassador.image={{ ambassador.image }} ambassador {{ playbook_dir }}/../../../platforms/shared/charts/ambassador
    {% endif %}
  tags:
    - ambassador

# Wait for Ambassador pods to start running
- name: wait for pods to come up
  k8s_facts:
    kind: Pod
    namespace: default
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kubecontext }}"
    label_selectors:
      - name = ambassador
    field_selectors:
      - status.phase=Running
  register: kubectl_get_pods
  until: kubectl_get_pods.resources|length > 0
  retries: 5
  delay: 15

