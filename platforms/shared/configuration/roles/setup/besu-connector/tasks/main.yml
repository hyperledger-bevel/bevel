# ############################################################################################
# #This role generates the value file for the helm releases 
# ############################################################################################


# ###########################################################################################
# #This task ensures that the directory exists, and creates it, if it does not exist
# - name: "Ensures {{ values_dir }}/{{ name }} dir exists"
#   include_role:
  
#     name: "/home/bevel/platforms/shared/configuration/roles/setup/besu-connector"
#   vars:
#     path: "/home/bevel/platforms/shared/charts/besu-connector"
#     check: "ensure_dir"

###########################################################################################

# - name: Create plugin.json
#   template:
#     src: "/home/bevel/platforms/shared/configuration/roles/setup/besu-connector/templates/plugin.tpl"
#     dest: "/home/bevel/platforms/shared/configuration/build/plugin.json"

###########################################################################################

#This task creates the value file for the helm release
#This is done by consuming a template file which is passes as a variable by the role
#including this helm_component role
- name: "create value file for {{ component_name }}"
  template:
    src: "/home/bevel/platforms/shared/configuration/roles/setup/besu-connector/templates/besu-connector.tpl"
    # dest: "{{ values_dir }}/{{ name }}/{{ component_name }}.yaml"
    dest: "/home/bevel/platforms/shared/configuration/build/besu-connector.yaml"
  vars:
    component_name: besu-connector
# ###########################################################################################
# #This task tests the value file for syntax errors/ missing values
# #This is done by calling the helm_lint role and passing the value file parameter
# #When a new helm_component is added, changes should be made in helm_lint role as well
# - name: Helm lint
#   include_role: 
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/helm_lint"
#   vars:
#     helmtemplate_type: "{{ type }}"
#     chart_path: "{{ charts_dir }}"
#     value_file: "{{ values_dir }}/{{ name }}/{{ component_name }}.yaml"
# ############################################################################################





# # Check if namespace created
# - name: "Waiting for the namespace {{ component_ns }} to be created"
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/check/k8_component"
#   vars:
#     component_type: "Namespace"
#     component_name: "{{ component_ns }}"
#     type: "retry"

# ###############################################################################################
# # This task creates the docker pull credentials for image registry
# - name: "Create docker credentials secret"
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/create/shared_k8s_secrets"
#   vars: 
#     namespace: "{{ component_ns }}"    
#     check: "docker_credentials"

# #############################################################################################
# # This task creates secrets for the root token
# - name: "Create vault token secret"
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/create/shared_k8s_secrets"
#   vars: 
#     namespace: "{{ component_ns }}"    
#     check: "token_secret"

# # Ensures the build directory
# - name: "Creating the build directory"
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/check/setup"
#   vars:
#     path: "{{ playbook_dir }}/build"
#     check: "ensure_dir"

# #####################################################################################################################
# # This task creates the access policy for various Substrate entity
# - name: Create policy for Access Control
#   vars:  
#     name: "{{ component_name }}"
#   template:
#     src: "{{ policy_templates[policy_type] | default('helm_component.tpl') }}"
#     dest: "{{ playbook_dir }}/build/vault-crypto-{{ component_type }}-{{ name }}-ro.hcl"
#   changed_when: false
  
# #############################################################################################
# # This tasks gets the kubernetes server url
# - name: Get the kubernetes server url
#   shell: |
#     KUBECONFIG={{ kubernetes.config_file }} kubectl config view --minify | grep server | cut -f 2- -d ":" | tr -d " "
#   register: kubernetes_server_url
####################################################################################################################
# This tasks generate vault_kubernetes helmrelease file
# - name: "Create value file for besu_connector"
#   include_role:
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/setup/besu-connector"
#   vars:  
#     type: "connector_k8s_mgmt"
#     # plugin: "{{ lookup('file', '{{ network.plugin }}') }}"
#     git_url: "{{ gitops.git_url }}"
#     git_branch: "{{ gitops.branch }}"
#     charts_dir: "platforms/shared/charts/besu-connector"
#     kubernetes_url: "{{ kubernetes_server_url.stdout }}"
#     values_dir: "platforms/shared/charts/besu-connector"
  

#   #Git Push : Pushes the above generated files to git directory 
# - name: Git Push
#   include_role: 
#     name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
#   vars:
#     GIT_DIR: "{{ playbook_dir }}/../../../"    
#     GIT_RESET_PATH: "{{ reset_path }}"
#     msg: "[ci skip] Pushing vault_kubernetes files"
   