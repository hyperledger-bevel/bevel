##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# ---------------------------------------------------------------------
- name: "Set nodeName var to bootnode peer name"
  set_fact:
    nodeName: "{{ peer.name }}"
    bootnodeCheck: true
  when: peer.type == 'bootnode'

# generate ipfs node helmrelease file
- name: "Create ipfs node release file"
  include_role:
    name: create/helm_component
  vars:
    type: "vitalam_ipfs_node"
    component_name: "{{ peer.name }}-ipfs-node"
    fullNameOverride: "{{ peer.name }}-ipfs-node"
    healthCheckPort: 80
    logLevel: "trace"
    ipfsApiPort: 5001
    ipfsSwarmPort: 4001
    nodeHost: "{{ nodeName }}"
    ipfsDataPath: "/ipfs"
    ipfsCommand: "/usr/local/bin/ipfs"
    ipfsArgs:
      - "daemon"
    ipfsLogLevel: "trace"
    enableLivenessProbe: true
    imageRepo: "ghcr.io/digicatapult/vitalam-ipfs"
    imageVersion: "v1.2.6"
    vitalamNode: false
  tags: 
    - molecule-idempotence-notest
  when: bootnodeCheck and peer.type == 'ipfs' or peer.type == 'ipfs-bootnode' 

# generate ipfs node helmrelease file
- name: "Create ipfs node release file"
  include_role:
    name: create/helm_component
  vars:
    type: "vitalam_ipfs_node"
    component_name: "{{ peer.name }}-ipfs-node"
    fullNameOverride: "{{ peer.name }}-ipfs-node"
    healthCheckPort: 80
    logLevel: "trace"
    ipfsApiPort: 5001
    ipfsSwarmPort: 4001
    nodeHost: "{{ peer.name }}-ipfs-node"
    ipfsDataPath: "/ipfs"
    ipfsCommand: "/usr/local/bin/ipfs"
    ipfsArgs:
      - "daemon"
    ipfsLogLevel: "trace"
    enableLivenessProbe: true
    imageRepo: "ghcr.io/digicatapult/vitalam-ipfs"
    imageVersion: "v1.2.6"
    vitalamNode: false
  tags: 
    - molecule-idempotence-notest
  when: not bootnodeCheck and peer.type == 'ipfs' or peer.type == 'ipfs-bootnode' 

# push the created deployment files to repository
- name: "Push the created deployment files to repository"
  include_role:
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    GIT_RESET_PATH: "platforms/substrate/configuration"
    msg: "[ci skip] Pushing ipfs node files for {{ component_ns }}"
  tags: notest
  when: peer.type == 'ipfs' or peer.type == 'ipfs-bootnode'

